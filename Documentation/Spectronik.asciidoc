---
title: Spectronik
---
[[protium_uart_spec]]
= Protium-1000/2500 UART Communication Specification

This document outlines the UART communication protocol for the Protium-1000/2500 system, based on the provided specification.

For the full original document, please visit link:https://hannl-my.sharepoint.com/shared?listurl=%2Fpersonal%2Fjaap%5Fjanssens%5Fhan%5Fnl%2FDocuments&id=%2Fpersonal%2Fjaap%5Fjanssens%5Fhan%5Fnl%2FDocuments%2FHAN%20Hydromotive%2F2024%2D2025%2FPowertrain%2Ftelemetry%2Dunit%2FTelemetry%20unit%202024%2Fhardware%2Fdocumentation%2FProtium%201000%2D2500%20UART%20Specification%20%2D%2023%2E03%2E15%20%281%29%2Epdf&parent=%2Fpersonal%2Fjaap%5Fjanssens%5Fhan%5Fnl%2FDocuments%2FHAN%20Hydromotive%2F2024%2D2025%2FPowertrain%2Ftelemetry%2Dunit%2FTelemetry%20unit%202024%2Fhardware%2Fdocumentation[this link].

-------------------------------------------------------------------------------
 UART Specification
-------------------------------------------------------------------------------

The following parameters define the UART communication settings for the Protium-1000/2500:

.UART Parameters
|===
| Parameter | Value
| Baud Rate | 57600 bps
| Data Bits | 8
| Parity Bit | None
| Stop Bits | 1
| Flow Control | None
| Logic Level | 5V HIGH, 0V LOW
|===

-------------------------------------------------------------------------------
 UART Connector Specification
-------------------------------------------------------------------------------

The Protium-1000/2500 utilizes a 4-pin Molex PicoBlade connector for UART communication. A premade cable assembly with part number 0151340403 from Molex may be used. The pinout is as follows:

*   1. +5V
*   2. PLC Rx (Protium Tx)
*   3. PLC Tx (Protium Rx)
*   4. GND

-------------------------------------------------------------------------------
 Serial Communication With PLC
-------------------------------------------------------------------------------

Serial communication with a PLC (Programmable Logic Controller) that has RS232/RS485 capabilities is feasible, provided the following conditions are met:

*   An RS232/RS485 to TTL converter is required. The Protium-1000/2500 operates exclusively on a 5V TTL logic level. Applying any other voltage will not function and could potentially damage the electronics.
*   Cable lengths on the TTL portion of the circuit should be kept small (ideally under 1m).
*   A full duplex connection is required, meaning separate wires are used for the Receive (Rx) and Transmit (Tx) signals.

-------------------------------------------------------------------------------
 Message Output from the Protium-1000/2500
-------------------------------------------------------------------------------

All UART output transmitted *from* the Protium-1000/2500 is presented in a human-readable format, essentially a string of ASCII characters.

To allow an external program to decode and utilize this information, the output string must be parsed to extract the relevant values. Special characters are incorporated into the messages to facilitate this parsing process by clearly separating values and distinct messages.

Specifically, the pipe character (`|`, hexadecimal 0x7C) is used to denote the start of the running phase messages and also serves as a separator between values within those messages. The exclamation point (`!`, hexadecimal 0x21) marks the end of a running phase message.

.Example Running Phase Message Format
....
|FC_V : 71.17 V | FCT1: 30.90 C | H2P1 : 0.61 B | DCDCV: XX.X V |
FC_A : 10.21 A | FCT2: 28.46 C | H2P2 : 0.59 B | DCDCA: XX.X A |
FC_W : 726.6 W | FAN : 89 % | Tank-P: 117.0 B | DCDCW: XXXX.X W |
Energy: 298 Wh| BLW : 21 % | Tank-T: 25.08 C | BattV: 23.49 V |
!
Fan PWM auto
Blower auto
....

A sample parsing algorithm would involve:

1.  Extracting the entire message string starting from the first pipe (`|`) up to the exclamation point (`!`).
2.  Separating the extracted string into substrings using the pipes (`|`) as delimiters.
3.  From the resulting substrings that contain readings of interest, extracting the numerical or status value by using the colon (`:`) to separate the reading name from its value.

-------------------------------------------------------------------------------
 Message Input to the Protium-1000/2500
-------------------------------------------------------------------------------

All UART input transmitted *to* the Protium-1000/2500 is also sent as a string of ASCII characters. Each command string must be followed by a newline character.

A comprehensive list of all available commands can be found in `Annex A` of this document.

The Protium-1000/2500 expects specific commands depending on its current operational phase. If an unrecognized or incorrect command is received in the current phase, the system will display the following error message:

....
Command not found.
....

-------------------------------------------------------------------------------
 Phases of Operation
-------------------------------------------------------------------------------

The Protium-1000/2500 operates through 3 distinct phases. During each phase, the system will expect and respond to a different set of commands:

*   Startup
*   Running
*   End

-------------------------------------------------------------------------------
 Startup Phase
-------------------------------------------------------------------------------

Upon powering up, the Protium-1000/2500 enters the Startup phase and will initially display identification and status messages. A typical sequence of initial messages might include:

....
Spectronik Protium 2500
Type help<enter> for list of commands
Total Mileage: 1.57 kWh
Total Runtime: 0001:40 hrs
Ready to start.
....

The system then proceeds through a series of internal checks. It is important *not* to send commands to the system during these checks. A portion of the messages displayed during this part of the startup phase might look like this:

....
P2500 2203-05 initialising
Firmware version : V2.5_03032022_0642_2203-05-A
No. of cells : 80
Entering to Starting phase...
Anode Supply Pressure OK
Temperature Check OK
....

To transition from the Startup phase to the Running phase, the system expects the following command:

....
start
....

-------------------------------------------------------------------------------
 Running Phase
-------------------------------------------------------------------------------

Once the Protium-1000/2500 enters the Running phase, it begins to output status messages at a regular frequency of 1Hz. The format of these messages includes various system parameters separated by pipe characters (`|`) and terminated by an exclamation point (`!`), as described in the Message Output section.

Refer back to the link:<<_message_output_from_the_protium-10002500,Message Output>> section for the detailed format of the running phase messages and the recommended parsing algorithm.

-------------------------------------------------------------------------------
 End Phase
-------------------------------------------------------------------------------

The Protium-1000/2500 will enter the End Phase under two primary conditions:

1.  **Normal Shutdown:** When instructed to exit the Running phase by receiving the `end` command.
2.  **Abnormal Shutdown:** Automatically, if a significant error occurs (e.g., low hydrogen supply).

Upon entering the End Phase, the system will initiate its shutdown sequence and display corresponding messages.

.Messages during Normal Shutdown
....
Shutdown initiated
This Mileage: 14.0 Wh
This Runtime: 0000:07 hrs
Total Mileage: 1.57 kWh
Total Runtime: 0001:40 hrs
System Off
....

.Messages during Abnormal Shutdown (Example)
....
Abnormal shutdown initiated
This Mileage: 14.0 Wh
This Runtime: 0000:07 hrs
Total Mileage: 1.57 kWh
Total Runtime: 0001:40 hrs
System Off
....
Note the difference in the initial shutdown message ("Shutdown initiated" vs. "Abnormal shutdown initiated") depending on how the phase was entered.

-------------------------------------------------------------------------------
 Annex A: List of Commands
-------------------------------------------------------------------------------

This annex provides a list of commands accepted by the Protium-1000/2500 via UART, along with their function, the phase(s) in which they are considered valid, and the hexadecimal bytes representing the command string to be transmitted.

.Commands List
|===
| Command | Function | Phase when message is valid | Bytes to be transmitted (hexadecimal)

| start | To enter the running phase | Starting | 73 74 61 72 74
| end | To exit the running phase | Running | 65 6E 64
| f | Set the fans to auto | Running | 66
| b | Set the blowers to auto | Running | 62
| p | Single manual purge | Running | 70
| ver | Display the firmware version | Starting | 76 65 72
| 9 | Decrease fan speed by 1% | Running | 39
| 0 | Increase fan speed by 1% | Running | 30
| - | Decrease fan speed by 5% | Running | 2D
| = | Increase fan speed by 5% | Running | 3D
| [ | Decrease blower intensity by 3% | Running | 5B
| ] | Increase blower intensity by 3% | Running | 5D
|===